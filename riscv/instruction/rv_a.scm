(define-module (riscv instruction rv_a)
  #:use-module (riscv build-base)
  #:use-module (riscv range-base)
  #:export (lr.w sc.w amoswap.w amoadd.w amoxor.w amoand.w amoor.w amomin.w amomax.w amominu.w amomaxu.w)
)

(define lr.w (make-instruction rd rs1 aq rl (range-fixed 24 20 0) (range-fixed 31 29 0) (range-fixed 28 27 2) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define sc.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 0) (range-fixed 28 27 3) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoswap.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 0) (range-fixed 28 27 1) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoadd.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 0) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoxor.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 1) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoand.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 3) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoor.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 2) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amomin.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 4) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amomax.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 5) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amominu.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 6) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amomaxu.w (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 7) (range-fixed 28 27 0) (range-fixed 14 12 2) (range-fixed 6 2 11) (range-fixed 1 0 3)))
