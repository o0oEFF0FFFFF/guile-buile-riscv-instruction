(define-module (riscv instruction rv64_a)
  #:use-module (riscv build-base)
  #:use-module (riscv range-base)
  #:export (lr.d sc.d amoswap.d amoadd.d amoxor.d amoand.d amoor.d amomin.d amomax.d amominu.d amomaxu.d)
)

(define lr.d (make-instruction rd rs1 aq rl (range-fixed 24 20 0) (range-fixed 31 29 0) (range-fixed 28 27 2) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define sc.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 0) (range-fixed 28 27 3) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoswap.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 0) (range-fixed 28 27 1) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoadd.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 0) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoxor.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 1) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoand.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 3) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amoor.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 2) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amomin.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 4) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amomax.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 5) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amominu.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 6) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
(define amomaxu.d (make-instruction rd rs1 rs2 aq rl (range-fixed 31 29 7) (range-fixed 28 27 0) (range-fixed 14 12 3) (range-fixed 6 2 11) (range-fixed 1 0 3)))
