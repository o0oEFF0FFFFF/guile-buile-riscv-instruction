(define-module (riscv instruction rv_i)
  #:use-module (riscv build-base)
  #:use-module (riscv range-base)
  #:export (lui auipc jal jalr beq bne blt bge bltu bgeu lb lh lw lbu lhu sb sh sw addi slti sltiu xori ori andi add sub sll slt sltu xor srl sra or and fence ecall ebreak)
)

(define lui (make-instruction rd imm20 (range-fixed 6 2 13) (range-fixed 1 0 3)))
(define auipc (make-instruction rd imm20 (range-fixed 6 2 5) (range-fixed 1 0 3)))
(define jal (make-instruction rd jimm20 (range-fixed 6 2 27) (range-fixed 1 0 3)))
(define jalr (make-instruction rd rs1 imm12 (range-fixed 14 12 0) (range-fixed 6 2 25) (range-fixed 1 0 3)))
(define beq (make-instruction rs1 rs2 bimm12 (range-fixed 14 12 0) (range-fixed 6 2 24) (range-fixed 1 0 3)))
(define bne (make-instruction rs1 rs2 bimm12 (range-fixed 14 12 1) (range-fixed 6 2 24) (range-fixed 1 0 3)))
(define blt (make-instruction rs1 rs2 bimm12 (range-fixed 14 12 4) (range-fixed 6 2 24) (range-fixed 1 0 3)))
(define bge (make-instruction rs1 rs2 bimm12 (range-fixed 14 12 5) (range-fixed 6 2 24) (range-fixed 1 0 3)))
(define bltu (make-instruction rs1 rs2 bimm12 (range-fixed 14 12 6) (range-fixed 6 2 24) (range-fixed 1 0 3)))
(define bgeu (make-instruction rs1 rs2 bimm12 (range-fixed 14 12 7) (range-fixed 6 2 24) (range-fixed 1 0 3)))
(define lb (make-instruction rd rs1 imm12 (range-fixed 14 12 0) (range-fixed 6 2 0) (range-fixed 1 0 3)))
(define lh (make-instruction rd rs1 imm12 (range-fixed 14 12 1) (range-fixed 6 2 0) (range-fixed 1 0 3)))
(define lw (make-instruction rd rs1 imm12 (range-fixed 14 12 2) (range-fixed 6 2 0) (range-fixed 1 0 3)))
(define lbu (make-instruction rd rs1 imm12 (range-fixed 14 12 4) (range-fixed 6 2 0) (range-fixed 1 0 3)))
(define lhu (make-instruction rd rs1 imm12 (range-fixed 14 12 5) (range-fixed 6 2 0) (range-fixed 1 0 3)))
(define sb (make-instruction simm12 rs1 rs2 (range-fixed 14 12 0) (range-fixed 6 2 8) (range-fixed 1 0 3)))
(define sh (make-instruction simm12 rs1 rs2 (range-fixed 14 12 1) (range-fixed 6 2 8) (range-fixed 1 0 3)))
(define sw (make-instruction simm12 rs1 rs2 (range-fixed 14 12 2) (range-fixed 6 2 8) (range-fixed 1 0 3)))
(define addi (make-instruction rd rs1 imm12 (range-fixed 14 12 0) (range-fixed 6 2 4) (range-fixed 1 0 3)))
(define slti (make-instruction rd rs1 imm12 (range-fixed 14 12 2) (range-fixed 6 2 4) (range-fixed 1 0 3)))
(define sltiu (make-instruction rd rs1 imm12 (range-fixed 14 12 3) (range-fixed 6 2 4) (range-fixed 1 0 3)))
(define xori (make-instruction rd rs1 imm12 (range-fixed 14 12 4) (range-fixed 6 2 4) (range-fixed 1 0 3)))
(define ori (make-instruction rd rs1 imm12 (range-fixed 14 12 6) (range-fixed 6 2 4) (range-fixed 1 0 3)))
(define andi (make-instruction rd rs1 imm12 (range-fixed 14 12 7) (range-fixed 6 2 4) (range-fixed 1 0 3)))
(define add (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 0) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define sub (make-instruction rd rs1 rs2 (range-fixed 31 25 32) (range-fixed 14 12 0) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define sll (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 1) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define slt (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 2) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define sltu (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 3) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define xor (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 4) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define srl (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 5) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define sra (make-instruction rd rs1 rs2 (range-fixed 31 25 32) (range-fixed 14 12 5) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define or (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 6) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define and (make-instruction rd rs1 rs2 (range-fixed 31 25 0) (range-fixed 14 12 7) (range-fixed 6 2 12) (range-fixed 1 0 3)))
(define fence (make-instruction fm pred succ rs1 rd (range-fixed 14 12 0) (range-fixed 6 2 3) (range-fixed 1 0 3)))
(define ecall (make-instruction (range-fixed 31 20 0) (range-fixed 19 7 0) (range-fixed 6 2 28) (range-fixed 1 0 3)))
(define ebreak (make-instruction (range-fixed 31 20 1) (range-fixed 19 7 0) (range-fixed 6 2 28) (range-fixed 1 0 3)))
